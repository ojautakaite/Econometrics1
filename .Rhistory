knitr::opts_chunk$set(echo = TRUE)
library('prob')
install.packages(""prob"")
install.packages("'prob'")
install.packages("'prob'")
install.packages("'prob'")
install.packages("'prob'")
install.packages("'prob'")
install.packages("'prob'")
install.packages("'fun'")
install.packages("prob")
n <- 10^5
S <- replicate(n, sum(sample(1:6, 3, replace = TRUE)))
head(S, 15)
St <- rolldie(3, nsides = 6, makespace = TRUE)
St <- addrv(St, sum = X1 + X2 + X3)
S_teor <- marginal(St, vars="sum")
S_teor
library("prob", lib.loc="~/R/win-library/3.3")
St <- rolldie(3, nsides = 6, makespace = TRUE)
St <- addrv(St, sum = X1 + X2 + X3)
S_teor <- marginal(St, vars="sum")
S_teor
St <- rolldie(3, nsides = 6, makespace = TRUE)
St <- addrv(St, sum = X1 + X2 + X3)
S_teor <- marginal(St, vars="sum")
S_teor
library("prob", lib.loc="~/R/win-library/3.3")
detach("package:prob", unload=TRUE)
library("prob", lib.loc="~/R/win-library/3.3")
library("evaluate", lib.loc="~/R/win-library/3.3")
St <- rolldie(3, nsides = 6, makespace = TRUE)
St <- addrv(St, sum = X1 + X2 + X3)
S_teor <- marginal(St, vars="sum")
S_teor
n <- 10^5
S <- replicate(n, sum(sample(1:6, 3, replace = TRUE)))
head(S, 15)
n <- 10^5
S <- replicate(n, sum(sample(1:6, 3, replace = TRUE)))
head(S, 15)
St <- rolldie(3, nsides = 6, makespace = TRUE)
St <- addrv(St, sum = X1 + X2 + X3)
S_teor <- marginal(St, vars="sum")
S_teor
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
n <- 10^5
S <- replicate(n, sum(sample(1:6, 3, replace = TRUE)))
head(S, 15)
cbind(as.data.frame(table(S)/n), S_teor)
cbind(as.data.frame(table(S)/n), S_teor)
plot(table(S)/n, xlab="Suma", ylab="Tikimybė")
points(S_teor, col=2)
ES <- sum(S_teor$probs * S_teor$sum)
ES
varS <- sum(S_teor$probs * (S_teor$sum-ES)^2)
varS
plot(cumsum(S)/1:n, type="l", xlab="n", ylab = "S / n", main="Vidurkio artėjimas į teorinį")
abline(h=ES, col=2)
a=S*0
for(i in 1:10000){
a[i]=var(S[1:i])
}
plot(a[1:10000], type="l", xlab="n", ylab="varS", main="Dispersijos artėjimas į teorinę")
abline(h=varS, col=2)
knitr::opts_chunk$set(echo = TRUE)
library(fun)
if (.Platform$OS.type == "windows") x11() else x11(type = "Xlib")
mine_sweeper()
library(fun)
gomoku()
